-variables
local lp = game.Players.LocalPlayer
local character = lp.Character or lp.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")
local RS = game.ReplicatedStorage
local VirtualUser = game:GetService("VirtualUser")
local VIM = game:GetService("VirtualInputManager")
local GuiService = game:GetService("GuiService")

--funcs
local function rotateToGround()
    local position = hrp.Position

    local downwardsCFrame = CFrame.new(position, position - Vector3.new(0, 1, 0))
    hrp.CFrame = downwardsCFrame
end

local function m1(pos) --Vector2.new()
            game:GetService("VirtualUser"):ClickButton1(pos)
end
local function m2(pos) --Vector2.new()
            game:GetService("VirtualUser"):ClickButton2(pos)
end

local function replicateButtonClick(button) --path
        GuiService.SelectedObject = button
    VIM:SendKeyEvent(true, Enum.KeyCode.Return, false, game)
    wait(0.05)
    VIM:SendKeyEvent(false, Enum.KeyCode.Return, false, game)
    wait(0.05)
    GuiService.GuiNavigationEnabled = false
end
local function replicateKeyCodeClick(keycode) --self explanatory
        VIM:SendKeyEvent(true, keycode, false, game)
    wait(0.05)
    VIM:SendKeyEvent(false, keycode, false, game)
    wait(0.05)
end

local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

local function moveto(obj, speed)
    local player = Players.LocalPlayer
    if not player or not player.Character then return end
    local hrp = player.Character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    -- resolve target CFrame and position
    local targetCFrame, targetPos
    local t = typeof(obj)
    if t == "Instance" then
        if obj:IsA("BasePart") then
            targetCFrame = obj.CFrame
            targetPos = obj.Position
        elseif obj:IsA("Model") and obj.PrimaryPart then
            targetCFrame = obj:GetPrimaryPartCFrame()
            targetPos = targetCFrame.p
        else
            error("moveto: Unsupported Instance type")
        end
    elseif t == "CFrame" then
        targetCFrame = obj
        targetPos = obj.p
    elseif t == "Vector3" then
        targetCFrame = CFrame.new(obj)
        targetPos = obj
    else
        error("moveto: expected Instance, CFrame, or Vector3")
    end

    local distance = (hrp.Position - targetPos).Magnitude
    if distance == 0 then return end

    local info = TweenInfo.new(distance/speed)
    local tween = TweenService:Create(hrp, info, {CFrame = targetCFrame})

    -- create or reuse an antifall BodyVelocity
    local antifall = hrp:FindFirstChild("Everyx_Antifall")
    local createdAntifall = false
    if not antifall then
        antifall = Instance.new("BodyVelocity")
        antifall.Name = "Everyx_Antifall"
        antifall.Parent = hrp
        antifall.Velocity = Vector3.new(0, 1, 0)
        antifall.MaxForce = Vector3.new(0, math.huge, 0)
        createdAntifall = true
    end

    -- use existing noclip function if available
    local noclipConnection
    if type(noclip) == "function" then
        noclipConnection = RunService.Stepped:Connect(noclip)
    else
        noclipConnection = RunService.Stepped:Connect(function()
            if not player.Character then return end
            for _, part in ipairs(player.Character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
        end)
    end

    tween:Play()

    tween.Completed:Connect(function()
        if createdAntifall and antifall then
            antifall:Destroy()
        end
        if noclipConnection then
            noclipConnection:Disconnect()
        end
    end)
end

local function copyPlrPos()
    local lp = game.Players.LocalPlayer
    local character = lp.Character or lp.CharacterAdded:Wait()
    local hrp = character:WaitForChild("HumanoidRootPart")
    setclipboard("Vector3.new(" .. hrp.Position.X  .. "," .. hrp.Position.Y .. "," .. hrp.Position.Z .. ")")
end

function checkForRaid()
    if game:GetService("Players").LocalPlayer.PlayerGui.Settings.RaidConfirm.Visible == true then
        local yes = game:GetService("Players").LocalPlayer.PlayerGui.Settings.RaidConfirm.Yes
        replicateButtonClick(yes)
    end
end


while true do
    checkForRaid()
    task.wait(1)
end
    